# Generated by Selenium IDE
import pytest
import time, sys
import json
import dateparser, datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

class TestProquestsearch():
  def setup_method(self, method):
    chrome_options = webdriver.FirefoxOptions ()
    chrome_options.add_argument("-â€“headless")
    #chrome_options.add_argument("--disable-dev-shm-usage");
    #chrome_options.add_argument("--no-sandbox");
    self.driver = webdriver.Firefox (options=chrome_options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_proquestsearch(self):
    wait = WebDriverWait(self.driver, 10); 
    fout=open(sys.argv[1],'w+',encoding='utf-8')
    date=dateparser.parse('2020-01-01')
    date1=dateparser.parse('2020-01-02')
    self.driver.get("https://www.proquest.com/")
    self.driver.set_window_size(1920, 975)
    input('set up the window')
    self.driver.find_element(By.ID, "searchTerm").click(); time.sleep(0.1);
    self.driver.find_element(By.ID, "searchTerm").send_keys("violent crime")
    self.driver.find_element(By.ID, "expandedSearch").click(); time.sleep(0.1);
    time.sleep(1)
    element = self.driver.find_element(By.ID, "sourcetype-header")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element_with_offset(element, 0, 0).perform()
    self.driver.find_element(By.ID, "filter_3").click()
    element = self.driver.find_element(By.ID, "expandResultsCheckBox")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    while True:
        try:
            self.driver.find_element(By.ID, "expandResultsCheckBox").click()
            break
        except:
            pass
    
    while True:
        try:
            self.driver.find_element(By.XPATH, '//a[@id="pubTitle-header"]').click()
            break
        except:
            pass
    
    
    while True:
        try:
            self.driver.find_element(By.XPATH, '//a[@data-update-zone="selectMoreZone_Publicationtitle"]').click()
            break
        except:
            print('no title')
            pass
    newspapers="New York Times; The Washington Post; Times - Picayune; Los Angeles Times; Pittsburgh Post - Gazette; St. Louis Post - Dispatch; Orlando Sentinel; Boston Globe; Chicago Tribune; Wall Street Journal; Arizona Republic"
    for news in newspapers.split(';'):
        while True:
            try:
                self.driver.find_element(By.XPATH,f'//input[@title="Include {news.strip()}"]').click()
                break
            except:
                print(news.strip(), 'not found')
                time.sleep(0.1)
                pass
    input('click apply and press enter') 
    while True:
        try:
            self.driver.find_element(By.ID, "startingDate").send_keys('2012-01-01')    
            break
        except:
            print('no starting date')
            pass

    while date<date1:
        n=len(date.isoformat().split('T')[0])
        
        while True:
            try:
                self.driver.find_element(By.ID, "endingDate").send_keys(date.isoformat().split('T')[0]); time.sleep(1)
                break
            except:
                pass

        while  True:
            try:
                self.driver.find_element(By.ID, "dateRangeSubmit").click();
                break
            except:
                pass
        s=self.driver.find_element(By.ID, "pqResultsCount")
        fout.write(date.isoformat()+" "+s.get_attribute('innerHTML')+"\r\n")
        print(date.isoformat()+" "+s.get_attribute('innerHTML')+"\r\n")
        fout.flush()
        sys.stdout.flush()
        while True:
            try:
                self.driver.find_element(By.ID, "endingDate").clear()
                break
            except:
                pass
        date+=datetime.timedelta(days=1)


t=TestProquestsearch()
t.setup_method(None)
t.test_proquestsearch()
  
